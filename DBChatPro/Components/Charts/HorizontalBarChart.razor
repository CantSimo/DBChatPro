@using Microsoft.AspNetCore.Components
@using Microsoft.JSInterop
@using System.Text.Json

<div>
    <canvas id="@CanvasId" style="height:@ChartHeight;"></canvas>
</div>

@code {
    [Parameter] public string[] Labels { get; set; }
    [Parameter] public double[] Data { get; set; }
    [Parameter] public string CanvasId { get; set; } = "myHorizontalBarChart";
    [Parameter] public string CanvasHeight { get; set; } = "400px";
    private string ChartHeight => $"{(Labels.Length * 50)}px"; // Adjust 50px as needed for your design

    [Inject] IJSRuntime JSRuntime { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Initialize the chart when the component is rendered for the first time
            await InitializeChart();
        }
    }

    private async Task InitializeChart()
    {
        var script = $@"
            var ctx = document.getElementById('{CanvasId}').getContext('2d');
            var myHorizontalBarChart = new Chart(ctx, {{
                type: 'bar',
                data: {{
                    labels: {JsonSerializer.Serialize(Labels)},
                    datasets: [{{
                        data: {JsonSerializer.Serialize(Data)},
                        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],
                        barThickness: 30  // Adjust this value to make bars thicker
                    }}]
                }},
                options: {{
                    responsive: true,
                    maintainAspectRatio: false,
                    indexAxis: 'y',
                    scales: {{
                        xAxes: [{{
                            ticks: {{
                                beginAtZero: true
                            }}
                        }}]
                    }}
                }}
            }});";

        await JSRuntime.InvokeVoidAsync("eval", script);
    }
}
